{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kmine/Desktop/catchmypoketmonster/app/api/pokemons/route.js"],"sourcesContent":["export async function GET(request) {\r\n    try {\r\n        const {searchParams} =new URL(request.url);\r\n        const page = parseInt(searchParams.get('page')) || 0;\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=20&offset=${page * 20}`);\r\n        const data = await res.json();\r\n\r\n        const pokemons = await Promise.all(\r\n            data.results.map(async (p) => {\r\n                const detailRes = await fetch(p.url);\r\n                const detailData = await detailRes.json();\r\n\r\n                const speciesRes = await fetch(detailData.species.url);\r\n                const speciesData = await speciesRes.json();\r\n\r\n                const koreaNameObj = speciesData.names.find((n) => n.language.name === \"ko\");\r\n                const koreanName = koreaNameObj ? koreaNameObj.name : detailData.name;\r\n\r\n                // 3. 타입 추출\r\n                //const types = detailData.types.map((t) => t.type.name);\r\n\r\n                const types = await Promise.all(\r\n                    detailData.types.map(async(a)=>{\r\n                        const typeRes = await fetch(a.type.url)\r\n                        const typeData = await typeRes.json();\r\n                        const koNameObj = typeData.names.find(n => n.language.name === 'ko');\r\n                        return koNameObj ? koNameObj.name : a.type.name;\r\n                    })\r\n                )\r\n\r\n\r\n                // 이미지 URL\r\n                const image = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${detailData.id}.png`;\r\n\r\n                return { id: detailData.id, name: koreanName, image, types };\r\n            })\r\n        );\r\n        //이전 html 에서는 없던 내용, 학습 필요\r\n        return new Response(JSON.stringify(pokemons), {\r\n            status: 200,\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n    } catch(err) {\r\n        console.error(err);\r\n        return new Response(JSON.stringify(pokemons), {\r\n            status: 200,\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n    }\r\n}"],"names":[],"mappings":";;;;AAAO,eAAe,IAAI,OAAO;IAC7B,IAAI;QACA,MAAM,EAAC,YAAY,EAAC,GAAE,IAAI,IAAI,QAAQ,GAAG;QACzC,MAAM,OAAO,SAAS,aAAa,GAAG,CAAC,YAAY;QACnD,MAAM,MAAM,MAAM,MAAM,CAAC,kDAAkD,EAAE,OAAO,IAAI;QACxF,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,MAAM,YAAW,MAAM,QAAQ,GAAG,CAC9B,KAAK,OAAO,CAAC,GAAG,CAAC,OAAO;YACpB,MAAM,YAAY,MAAM,MAAM,EAAE,GAAG;YACnC,MAAM,aAAa,MAAM,UAAU,IAAI;YAEvC,MAAM,aAAa,MAAM,MAAM,WAAW,OAAO,CAAC,GAAG;YACrD,MAAM,cAAc,MAAM,WAAW,IAAI;YAEzC,MAAM,eAAe,YAAY,KAAK,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC,IAAI,KAAK;YACvE,MAAM,aAAa,eAAe,aAAa,IAAI,GAAG,WAAW,IAAI;YAErE,WAAW;YACX,yDAAyD;YAEzD,MAAM,QAAQ,MAAM,QAAQ,GAAG,CAC3B,WAAW,KAAK,CAAC,GAAG,CAAC,OAAM;gBACvB,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,CAAC,GAAG;gBACtC,MAAM,WAAW,MAAM,QAAQ,IAAI;gBACnC,MAAM,YAAY,SAAS,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,QAAQ,CAAC,IAAI,KAAK;gBAC/D,OAAO,YAAY,UAAU,IAAI,GAAG,EAAE,IAAI,CAAC,IAAI;YACnD;YAIJ,UAAU;YACV,MAAM,QAAQ,CAAC,gGAAgG,EAAE,WAAW,EAAE,CAAC,IAAI,CAAC;YAEpI,OAAO;gBAAE,IAAI,WAAW,EAAE;gBAAE,MAAM;gBAAY;gBAAO;YAAM;QAC/D;QAEJ,0BAA0B;QAC1B,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,YAAW;YAC1C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAClD;IACJ,EAAE,OAAM,KAAK;QACT,QAAQ,KAAK,CAAC;QACd,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,WAAW;YAC1C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAClD;IACJ;AACJ","debugId":null}}]
}